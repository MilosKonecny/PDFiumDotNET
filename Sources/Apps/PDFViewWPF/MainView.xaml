<Window x:Class="PDFiumDotNET.Apps.PDFViewWPF.MainView"
        x:Name="MainViewName"
        x:Uid="MainViewUid"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:PDFiumDotNET.Apps.PDFViewWPF"
        xmlns:wpfControl="clr-namespace:PDFiumDotNET.WpfControls;assembly=PDFiumDotNET.WpfControls"
        xmlns:templates="clr-namespace:PDFiumDotNET.Apps.PDFViewWPF.Templates"
        xmlns:controls="clr-namespace:PDFiumDotNET.Apps.PDFViewWPF.Controls"
        mc:Ignorable="d" 
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type local:MainViewModel}}"
        d:DesignHeight="400" d:DesignWidth="600"
        Title="{Binding Path=TitleInformation, StringFormat=PDFViewWPF example application ({0})}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
            <Style TargetType="Button">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
            </Style>
            <Style x:Key="NoStyles" TargetType="Button">
            </Style>
            <Style TargetType="ToggleButton">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
            </Style>
            <Style TargetType="wpfControl:AutoDisabledImage">
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="Width" To="36" />
                                    <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="Height" To="36" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="Width" To="32" />
                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="Height" To="32" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!-- Menu -->
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="{Binding ElementName=MainViewName, Path=Background}">
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Command="{Binding Path=OpenCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources\Menu\BlueUI\icons8_pdf.ico" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Close" Command="{Binding Path=CloseCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources\Menu\BlueUI\icons8_close.ico" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Properties" Command="{Binding Path=InformationCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources\Menu\BlueUI\icons8_search_property.ico" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding Path=ExitCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources\Menu\BlueUI\icons8_shutdown.ico" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Command="{Binding Path=AboutCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources\Menu\BlueUI\icons8_about.ico" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <!-- Splitter -->
        <GridSplitter x:Name="_splitter" Grid.Row="4" Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch">
            <GridSplitter.Background>
                <SolidColorBrush x:Name="_splitterBackground" Color="White"/>
            </GridSplitter.Background>
            <GridSplitter.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="_splitterBackground" Storyboard.TargetProperty="Color" To="DarkGray" Duration="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="_splitterBackground" Storyboard.TargetProperty="Color" To="White" Duration="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </GridSplitter.Triggers>
        </GridSplitter>
        <!-- Toolbar -->
        <WrapPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
            <WrapPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="2,0"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Padding" Value="2,0"/>
                </Style>
                <Style TargetType="controls:TextBoxEnter">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Padding" Value="2,0"/>
                </Style>
            </WrapPanel.Resources>
            <StackPanel Orientation="Horizontal" Margin="0,5,10,5">
                <Button Command="{Binding Path=OpenCommand}" ToolTip="Open PDF document">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_pdf_40px.png"/>
                </Button>
                <Button Command="{Binding Path=CloseCommand}" ToolTip="Close PDF document">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_close_40px.png"/>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,10,5">
                <Button Command="{Binding Path=InformationCommand}" ToolTip="Document information">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_search_property_40px.png"/>
                </Button>
                <ToggleButton Command="{Binding Path=ShowAnnotationsCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" ToolTip="Show document annotations">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_note_40px.png"/>
                </ToggleButton>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,10,5">
                <Button Command="{Binding Path=ZoomWidthCommand}" ToolTip="Zoom to width of widest page">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_width_40px.png"/>
                </Button>
                <Button Command="{Binding Path=ZoomHeightCommand}" ToolTip="Zoom to height of highest page">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_height_40px.png"/>
                </Button>
                <Button Command="{Binding Path=ZoomOutCommand}" ToolTip="Zoom out">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_zoom_out_40px.png"/>
                </Button>
                <StackPanel Orientation="Horizontal" Margin="10,0">
                    <TextBlock Text="Zoom:" />
                    <controls:TextBoxEnter Text="{Binding Path=CurrentZoom}" IsReadOnly="{Binding Path=IsDocumentClosed}">
                        <TextBox.ToolTip>
                            <StackPanel>
                                <TextBlock Text="Enter desired zoom factor"/>
                                <TextBlock Text="Press enter or navigate away"/>
                            </StackPanel>
                        </TextBox.ToolTip>
                    </controls:TextBoxEnter>
                    <TextBlock Text="%" />
                </StackPanel>
                <Button Command="{Binding Path=ZoomInCommand}" ToolTip="Zoom in">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_zoom_in_40px.png"/>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,10,5">
                <Button Command="{Binding Path=GoToFirstPageCommand}" ToolTip="Navigate to first page">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_skip_to_start_40px.png"/>
                </Button>
                <Button Command="{Binding Path=GoToPreviousPageCommand}" ToolTip="Navigate to previous page">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_rewind_40px.png"/>
                </Button>
                <StackPanel Orientation="Horizontal" Margin="10,0">
                    <TextBlock Text="Page:" />
                    <controls:TextBoxEnter Text="{Binding Path=CurrentPageLabel}" IsReadOnly="{Binding Path=IsDocumentClosed}">
                        <TextBox.ToolTip>
                            <StackPanel>
                                <TextBlock Text="Enter the page label to navigate to this page"/>
                                <TextBlock Text="Press enter or navigate away"/>
                            </StackPanel>
                        </TextBox.ToolTip>
                    </controls:TextBoxEnter>
                    <TextBlock Text="(" />
                    <controls:TextBoxEnter Text="{Binding Path=CurrentPageIndex}" IsReadOnly="{Binding Path=IsDocumentClosed}">
                        <TextBox.ToolTip>
                            <StackPanel>
                                <TextBlock Text="Enter the page number to navigate to this page"/>
                                <TextBlock Text="Press enter or navigate away"/>
                            </StackPanel>
                        </TextBox.ToolTip>
                    </controls:TextBoxEnter>
                    <TextBlock Text="/" />
                    <TextBox Text="{Binding Path=ViewPageComponent.PageCount, Mode=OneWay}"
                             ToolTip="Not editable"
                             IsReadOnly="True" SelectionBrush="Transparent" />
                    <TextBlock Text=")" />
                </StackPanel>
                <Button Command="{Binding Path=GoToNextPageCommand}" ToolTip="Navigate to next page">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_fast_forward_40px.png"/>
                </Button>
                <Button Command="{Binding Path=GoToLastPageCommand}" ToolTip="Navigate to last page">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_end_40px.png"/>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,10,5">
                <ToggleButton IsChecked="{Binding Path=IsViewOneColumnActive, Mode=OneWay}" Command="{Binding Path=ViewOneColumnCommand}" ToolTip="Pages in one column">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_view_1col_40px.png"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Path=IsViewTwoColumnsActive, Mode=OneWay}" Command="{Binding Path=ViewTwoColumnsCommand}" ToolTip="Pages in two columns">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_view_2col_40px.png"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Path=IsViewTwoColumnsSpecialActive, Mode=OneWay}" Command="{Binding Path=ViewTwoColumnsSpecialCommand}" ToolTip="Pages in two columns, one page in first row">
                    <wpfControl:AutoDisabledImage Source="Resources\Toolbar\BlueUI\icons8_view_2col_special_40px.png"/>
                </ToggleButton>
            </StackPanel>
        </WrapPanel>
        <!-- Bookmarks & Thumbnails -->
        <TabControl x:Name="_tabControl" Grid.Row="4" Grid.Column="0">
            <TabItem Header="Bookmarks">
                <Border Margin="3" BorderThickness="1" BorderBrush="{Binding ElementName=_tabControl, Path=BorderBrush}">
                    <TreeView BorderThickness="0"
                          ItemsSource="{Binding Path=BookmarkComponent.Bookmarks}" SelectedItemChanged="HandleTreeViewSelectedItemChangedEvent"
                          VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Standard">
                        <TreeView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </TreeView.ItemsPanel>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=Bookmarks}">
                                <TextBlock Grid.Column="0" Text="{Binding Path=Text}" >
                                    <TextBlock.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Path=Destination.Info, StringFormat=Destination: {0}}"/>
                                            <TextBlock Text="{Binding Path=Action.Info, StringFormat=Action: {0}}"/>
                                        </StackPanel>
                                    </TextBlock.ToolTip>
                            </TextBlock>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding Path=IsOpened}"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </Border>
            </TabItem>
            <TabItem Header="Thumbnails">
                <Border Margin="3" BorderThickness="1" BorderBrush="{Binding ElementName=_tabControl, Path=BorderBrush}">
                    <ScrollViewer BorderThickness="0"
                              CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <wpfControl:PDFThumbnailView x:Name="_pdfThumbnailView"
                                                     BorderThickness="0"
                                                     PDFFocusedPage="{Binding Path=ViewPageComponent.CurrentPageIndex}"
                                                     PDFPageComponent="{Binding Path=ThumbnailPageComponent}"/>
                    </ScrollViewer>
                </Border>
            </TabItem>
            <TabItem Header="Find text">
                <Border Margin="3" BorderThickness="1" BorderBrush="{Binding ElementName=_tabControl, Path=BorderBrush}">
                    <Grid Margin="3">
                        <Grid.Resources>
                            <HierarchicalDataTemplate x:Key="FindTemplatePageKey" ItemsSource="{Binding Positions}">
                                <TextBlock Text="{Binding Mode=OneTime, Path=RelatedPage.PageLabel, StringFormat=Page {0}}" />
                            </HierarchicalDataTemplate>
                            <DataTemplate x:Key="FindTemplatePositionKey">
                                <TextBlock Text="{Binding Mode=OneTime, Path=Context}" />
                            </DataTemplate>
                            <templates:FindTemplateSelector x:Key="FindTemplateSelectorKey"
                                                            PageTemplate="{StaticResource ResourceKey=FindTemplatePageKey}"
                                                            PositionTemplate="{StaticResource ResourceKey=FindTemplatePositionKey}"/>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Text="{Binding Path=FindText, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=IsDocumentOpened}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=FindTextCommand}" Key="Return" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <CheckBox Grid.Row="2" IsChecked="{Binding Path=IsFindTextCaseSensitive}" IsEnabled="{Binding Path=IsDocumentOpened}">
                            <TextBlock Text="Case sensitive"/>
                        </CheckBox>
                        <CheckBox Grid.Row="4" IsChecked="{Binding Path=IsFindTextWholeWords}" IsEnabled="{Binding Path=IsDocumentOpened}">
                            <TextBlock Text="Whole words"/>
                        </CheckBox>
                        <StackPanel Grid.Row="6" Orientation="Horizontal">
                            <Button Style="{StaticResource ResourceKey=NoStyles}" Width="50" Command="{Binding Path=FindTextCommand}">
                                <TextBlock Text="Find"/>
                            </Button>
                            <Button Style="{StaticResource ResourceKey=NoStyles}" Width="50" Margin="3,0,0,0" Command="{Binding Path=FindTextClearResultCommand}">
                                <TextBlock Text="Clear"/>
                            </Button>
                        </StackPanel>
                        <TreeView Grid.Row="8"
                                  ItemsSource="{Binding Path=FindTextResult}"
                                  SelectedItemChanged="HandleFindTreeViewSelectedItemChangedEvent"
                                  ItemTemplateSelector="{StaticResource ResourceKey=FindTemplateSelectorKey}">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="True" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Pages with annotation">
                <Border Margin="3" BorderThickness="1" BorderBrush="{Binding ElementName=_tabControl, Path=BorderBrush}">
                    <Grid Margin="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <Button Style="{StaticResource ResourceKey=NoStyles}" Width="50" Command="{Binding Path=FindAnnotationsCommand}">
                                <TextBlock Text="Find"/>
                            </Button>
                            <Button Style="{StaticResource ResourceKey=NoStyles}" Width="50" Margin="3,0,0,0" Command="{Binding Path=FindAnnotationsClearResultCommand}">
                                <TextBlock Text="Clear"/>
                            </Button>
                        </StackPanel>
                        <ListBox Grid.Row="2" ItemsSource="{Binding FindAnnotationsResult}" SelectedItem="{Binding SelectedPageWithAnnotation}" SelectionMode="Single">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=RelatedPage.PageLabel, StringFormat=Page {0}}"/>
                                        <TextBlock Text="{Binding Path=Count, StringFormat=({0})}" Margin="3,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>
        <!-- PDF -->
        <ScrollViewer Grid.Row="4" Grid.Column="2" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <wpfControl:PDFView x:Name="_pdfView"
                                PDFPageComponent="{Binding Path=ViewPageComponent}" />
        </ScrollViewer>
        <!-- Find text active -->
        <Grid Grid.Row="0" Grid.RowSpan="10" Grid.Column="0" Grid.ColumnSpan="10"
              Background="White" Opacity="0.8"
              Visibility="{Binding Path=IsFindTextActive, Converter={StaticResource ResourceKey=BooleanToVisibilityConverterKey}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontWeight="Bold" Text="{Binding Path=ActiveFindTextPage, StringFormat=Find text on page {0:#}}"/>
                <Button Style="{StaticResource ResourceKey=NoStyles}" Command="{Binding Path=FindTextCancelCommand}">
                    <TextBlock Text="Cancel"/>
                </Button>
            </StackPanel>
        </Grid>
        <!-- Find annotations active -->
        <Grid Grid.Row="0" Grid.RowSpan="10" Grid.Column="0" Grid.ColumnSpan="10"
              Background="White" Opacity="0.8"
              Visibility="{Binding Path=IsFindAnnotationsActive, Converter={StaticResource ResourceKey=BooleanToVisibilityConverterKey}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontWeight="Bold" Text="{Binding Path=ActiveFindAnnotationsPage, StringFormat=Find annotations on page {0:#}}"/>
                <Button Style="{StaticResource ResourceKey=NoStyles}" Command="{Binding Path=FindAnnotationsCancelCommand}">
                    <TextBlock Text="Cancel"/>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
